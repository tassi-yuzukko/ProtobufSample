/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: st.proto */

#ifndef PROTOBUF_C_st_2eproto__INCLUDED
#define PROTOBUF_C_st_2eproto__INCLUDED

#include "protobuf-c/protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


	typedef struct _St St;
typedef struct _St__T St__T;


/* --- enums --- */


/* --- messages --- */

struct  _St__T
{
	ProtobufCMessage base;
	int32_t x;
	int32_t y;
};
#define ST__T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&st__t__descriptor) \
    , 0, 0 }


struct  _St
{
	ProtobufCMessage base;
	int32_t a;
	char *b;
	St__T *child;
};
#define ST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&st__descriptor) \
    , 0, (char *)protobuf_c_empty_string, NULL }


/* St__T methods */
void   st__t__init
(St__T         *message);
/* St methods */
void   st__init
(St         *message);
size_t st__get_packed_size
(const St   *message);
size_t st__pack
(const St   *message,
	uint8_t             *out);
size_t st__pack_to_buffer
(const St   *message,
	ProtobufCBuffer     *buffer);
St *
st__unpack
(ProtobufCAllocator  *allocator,
	size_t               len,
	const uint8_t       *data);
void   st__free_unpacked
(St *message,
	ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void(*St__T_Closure)
(const St__T *message,
	void *closure_data);
typedef void(*St_Closure)
(const St *message,
	void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor st__descriptor;
extern const ProtobufCMessageDescriptor st__t__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_st_2eproto__INCLUDED */
